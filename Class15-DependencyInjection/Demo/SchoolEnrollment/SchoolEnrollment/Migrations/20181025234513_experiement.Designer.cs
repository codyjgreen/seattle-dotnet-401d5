// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SchoolEnrollment.Data;

namespace SchoolEnrollment.Migrations
{
    [DbContext(typeof(SchoolDbContext))]
    [Migration("20181025234513_experiement")]
    partial class experiement
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SchoolEnrollment.Models.Course", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<decimal>("Price");

                    b.Property<int>("Technology");

                    b.HasKey("ID");

                    b.ToTable("Courses");

                    b.HasData(
                        new { ID = 1, Name = "ethics", Price = 350.99m, Technology = 0 },
                        new { ID = 2, Name = "Advanced Python", Price = 300.99m, Technology = 2 },
                        new { ID = 43, Name = "c sharp", Price = 250.99m, Technology = 1 }
                    );
                });

            modelBuilder.Entity("SchoolEnrollment.Models.CourseEnrollments", b =>
                {
                    b.Property<int>("CourseID");

                    b.Property<int>("StudentID");

                    b.HasKey("CourseID", "StudentID");

                    b.HasIndex("StudentID");

                    b.ToTable("CourseEnrollments");
                });

            modelBuilder.Entity("SchoolEnrollment.Models.Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age");

                    b.Property<string>("FirstName")
                        .HasMaxLength(15);

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.HasKey("ID");

                    b.ToTable("Student");

                    b.HasData(
                        new { ID = 1, Age = 36, FirstName = "Jack", LastName = "Shepard" },
                        new { ID = 2, Age = 34, FirstName = "Kate", LastName = "Austin" },
                        new { ID = 3, Age = 40, FirstName = "Kanye", LastName = "West" }
                    );
                });

            modelBuilder.Entity("SchoolEnrollment.Models.Transcript", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseID");

                    b.Property<string>("Grade");

                    b.Property<bool>("Pass");

                    b.Property<int>("StudentID");

                    b.HasKey("ID");

                    b.HasIndex("CourseID");

                    b.HasIndex("StudentID");

                    b.ToTable("Transcript");
                });

            modelBuilder.Entity("SchoolEnrollment.Models.CourseEnrollments", b =>
                {
                    b.HasOne("SchoolEnrollment.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SchoolEnrollment.Models.Student", "Student")
                        .WithMany("CourseEnrollments")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SchoolEnrollment.Models.Transcript", b =>
                {
                    b.HasOne("SchoolEnrollment.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SchoolEnrollment.Models.Student", "Student")
                        .WithMany("Transcripts")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
